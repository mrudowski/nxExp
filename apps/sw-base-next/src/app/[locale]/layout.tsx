import clsx from 'clsx';
import {notFound} from 'next/navigation';
import {unstable_setRequestLocale} from 'next-intl/server';
import {ReactNode} from 'react';

import MainNav from '@/components/mainNav/mainNav.tsx';

import {latoFont} from './fonts.ts';
import styles from './layout.module.scss';

export const metadata = {
  title: 'SW BaseExp NextJs',
  description: 'Generated by create-nx-workspace',
};

const locales = ['en'];

export function generateStaticParams() {
  return locales.map(locale => ({locale}));
}

type RootLayoutProps = {
  children: ReactNode;
  params: {
    locale: string;
  };
};

// NEVER DO THIS:
// const queryClient = new QueryClient()
//
// Creating the queryClient at the file root level makes the cache shared
// between all requests and means _all_ data gets passed to _all_ users.
// Besides being bad for performance, this also leaks any sensitive data.

const LocaleLayout = ({children, params: {locale}}: RootLayoutProps) => {
  // TODO
  // const navigation = useNavigation();

  // Validate that the incoming `locale` parameter is valid
  if (!locales.includes(locale)) notFound();
  // Enable static rendering
  unstable_setRequestLocale(locale);

  return (
    <html lang={locale} className={latoFont.className} data-theme="light">
      <body>
        <div className={styles.appLayout}>
          <header className={clsx(styles.appHeader)}>
            {/*<header className={clsx(styles.appHeader, navigation.state === 'loading' && styles.appLoading)}>*/}
            <h1>SW NextExp</h1>
            <MainNav />
          </header>
          <main className={styles.appMain}>{children}</main>
        </div>
      </body>
    </html>
  );
};

export default LocaleLayout;
